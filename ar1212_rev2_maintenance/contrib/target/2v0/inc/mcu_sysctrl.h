#ifndef MCU_SYSCTRL_H
#define MCU_SYSCTRL_H
//***********************************************************************************
/// \file
///
/// Hardware block register definitions.
///
//***********************************************************************************
// Copyright 2018 ON Semiconductor.  All rights reserved.
//
// This software and/or documentation is licensed by ON Semiconductor under limited
// terms and conditions. The terms and conditions pertaining to the software and/or
// documentation are available at http://www.onsemi.com/site/pdf/ONSEMI_T&C.pdf
// ("ON Semiconductor Standard Terms and Conditions of Sale, Section 8 Software").
// Do not use this software and/or documentation unless you have carefully read and
// you agree to the limited terms and conditions. By using this software and/or
// documentation, you agree to the limited terms and conditions.
//***********************************************************************************

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// DO NOT EDIT - This file is auto-generated by the generate_headers.py script
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

//------------------------------------------------------------------------------
//                                  Constants
//------------------------------------------------------------------------------

// Register address definitions (offsets relative to register base)

#define MCU_SYSCTRL_MEM_CTRL                               (MCU_SYSCTRL_REG_BASE + 0x0000U)
#define MCU_SYSCTRL_PMU_CTRL                               (MCU_SYSCTRL_REG_BASE + 0x0004U)
#define MCU_SYSCTRL_RESET_CONTROL                          (MCU_SYSCTRL_REG_BASE + 0x0008U)
#define MCU_SYSCTRL_RESET_INFO                             (MCU_SYSCTRL_REG_BASE + 0x0010U)
#define MCU_SYSCTRL_REG4                                   (MCU_SYSCTRL_REG_BASE + 0x3FD0U)
#define MCU_SYSCTRL_REG5                                   (MCU_SYSCTRL_REG_BASE + 0x3FD4U)
#define MCU_SYSCTRL_REG6                                   (MCU_SYSCTRL_REG_BASE + 0x3FD8U)
#define MCU_SYSCTRL_REG7                                   (MCU_SYSCTRL_REG_BASE + 0x3FDCU)
#define MCU_SYSCTRL_REG0                                   (MCU_SYSCTRL_REG_BASE + 0x3FE0U)
#define MCU_SYSCTRL_REG1                                   (MCU_SYSCTRL_REG_BASE + 0x3FE4U)
#define MCU_SYSCTRL_REG2                                   (MCU_SYSCTRL_REG_BASE + 0x3FE8U)
#define MCU_SYSCTRL_REG3                                   (MCU_SYSCTRL_REG_BASE + 0x3FECU)
#define MCU_SYSCTRL_COMPONENT_ID0                          (MCU_SYSCTRL_REG_BASE + 0x3FF0U)
#define MCU_SYSCTRL_COMPONENT_ID1                          (MCU_SYSCTRL_REG_BASE + 0x3FF4U)
#define MCU_SYSCTRL_COMPONENT_ID2                          (MCU_SYSCTRL_REG_BASE + 0x3FF8U)
#define MCU_SYSCTRL_COMPONENT_ID3                          (MCU_SYSCTRL_REG_BASE + 0x3FFCU)

// Register field definitions

#define MCU_SYSCTRL_MEM_CTRL_REMAP__SIZE                   1U
#define MCU_SYSCTRL_MEM_CTRL_REMAP__SHIFT                  0U
#define MCU_SYSCTRL_MEM_CTRL_REMAP__MASK                   (((uint32_t)((1UL << MCU_SYSCTRL_MEM_CTRL_REMAP__SIZE) - 1U)) << MCU_SYSCTRL_MEM_CTRL_REMAP__SHIFT)

#define MCU_SYSCTRL_PMU_CTRL_RESERVED__SIZE                1U
#define MCU_SYSCTRL_PMU_CTRL_RESERVED__SHIFT               0U
#define MCU_SYSCTRL_PMU_CTRL_RESERVED__MASK                (((uint32_t)((1UL << MCU_SYSCTRL_PMU_CTRL_RESERVED__SIZE) - 1U)) << MCU_SYSCTRL_PMU_CTRL_RESERVED__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_LOCKUP_RESET__SIZE       1U
#define MCU_SYSCTRL_RESET_CONTROL_LOCKUP_RESET__SHIFT      0U
#define MCU_SYSCTRL_RESET_CONTROL_LOCKUP_RESET__MASK       (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_LOCKUP_RESET__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_LOCKUP_RESET__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_RESERVED_1__SIZE         1U
#define MCU_SYSCTRL_RESET_CONTROL_RESERVED_1__SHIFT        1U
#define MCU_SYSCTRL_RESET_CONTROL_RESERVED_1__MASK         (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_RESERVED_1__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_RESERVED_1__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_PLL_LOCK_STATUS__SIZE    1U
#define MCU_SYSCTRL_RESET_CONTROL_PLL_LOCK_STATUS__SHIFT   2U
#define MCU_SYSCTRL_RESET_CONTROL_PLL_LOCK_STATUS__MASK    (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_PLL_LOCK_STATUS__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_PLL_LOCK_STATUS__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_SOFT_RESET__SIZE         1U
#define MCU_SYSCTRL_RESET_CONTROL_SOFT_RESET__SHIFT        3U
#define MCU_SYSCTRL_RESET_CONTROL_SOFT_RESET__MASK         (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_SOFT_RESET__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_SOFT_RESET__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_HARD_RESET__SIZE         1U
#define MCU_SYSCTRL_RESET_CONTROL_HARD_RESET__SHIFT        4U
#define MCU_SYSCTRL_RESET_CONTROL_HARD_RESET__MASK         (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_HARD_RESET__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_HARD_RESET__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_CPU_WAIT__SIZE           1U
#define MCU_SYSCTRL_RESET_CONTROL_CPU_WAIT__SHIFT          5U
#define MCU_SYSCTRL_RESET_CONTROL_CPU_WAIT__MASK           (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_CPU_WAIT__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_CPU_WAIT__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_VCORE_CLK_EN__SIZE       1U
#define MCU_SYSCTRL_RESET_CONTROL_VCORE_CLK_EN__SHIFT      6U
#define MCU_SYSCTRL_RESET_CONTROL_VCORE_CLK_EN__MASK       (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_VCORE_CLK_EN__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_VCORE_CLK_EN__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_I2C_WRITE_CRC_NO_RESET__SIZE 1U
#define MCU_SYSCTRL_RESET_CONTROL_I2C_WRITE_CRC_NO_RESET__SHIFT 7U
#define MCU_SYSCTRL_RESET_CONTROL_I2C_WRITE_CRC_NO_RESET__MASK (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_I2C_WRITE_CRC_NO_RESET__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_I2C_WRITE_CRC_NO_RESET__SHIFT)

#define MCU_SYSCTRL_RESET_CONTROL_RESERVED_31_8__SIZE      24U
#define MCU_SYSCTRL_RESET_CONTROL_RESERVED_31_8__SHIFT     8U
#define MCU_SYSCTRL_RESET_CONTROL_RESERVED_31_8__MASK      (((uint32_t)((1UL << MCU_SYSCTRL_RESET_CONTROL_RESERVED_31_8__SIZE) - 1U)) << MCU_SYSCTRL_RESET_CONTROL_RESERVED_31_8__SHIFT)

#define MCU_SYSCTRL_RESET_INFO_RESET_CAUSE__SIZE           3U
#define MCU_SYSCTRL_RESET_INFO_RESET_CAUSE__SHIFT          0U
#define MCU_SYSCTRL_RESET_INFO_RESET_CAUSE__MASK           (((uint32_t)((1UL << MCU_SYSCTRL_RESET_INFO_RESET_CAUSE__SIZE) - 1U)) << MCU_SYSCTRL_RESET_INFO_RESET_CAUSE__SHIFT)

#define MCU_SYSCTRL_REG4_REG4__SIZE                        32U
#define MCU_SYSCTRL_REG4_REG4__SHIFT                       0U
#define MCU_SYSCTRL_REG4_REG4__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG4_REG4__SIZE) - 1U)) << MCU_SYSCTRL_REG4_REG4__SHIFT)

#define MCU_SYSCTRL_REG5_REG5__SIZE                        32U
#define MCU_SYSCTRL_REG5_REG5__SHIFT                       0U
#define MCU_SYSCTRL_REG5_REG5__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG5_REG5__SIZE) - 1U)) << MCU_SYSCTRL_REG5_REG5__SHIFT)

#define MCU_SYSCTRL_REG6_REG6__SIZE                        32U
#define MCU_SYSCTRL_REG6_REG6__SHIFT                       0U
#define MCU_SYSCTRL_REG6_REG6__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG6_REG6__SIZE) - 1U)) << MCU_SYSCTRL_REG6_REG6__SHIFT)

#define MCU_SYSCTRL_REG7_REG7__SIZE                        32U
#define MCU_SYSCTRL_REG7_REG7__SHIFT                       0U
#define MCU_SYSCTRL_REG7_REG7__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG7_REG7__SIZE) - 1U)) << MCU_SYSCTRL_REG7_REG7__SHIFT)

#define MCU_SYSCTRL_REG0_REG0__SIZE                        32U
#define MCU_SYSCTRL_REG0_REG0__SHIFT                       0U
#define MCU_SYSCTRL_REG0_REG0__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG0_REG0__SIZE) - 1U)) << MCU_SYSCTRL_REG0_REG0__SHIFT)

#define MCU_SYSCTRL_REG1_REG1__SIZE                        32U
#define MCU_SYSCTRL_REG1_REG1__SHIFT                       0U
#define MCU_SYSCTRL_REG1_REG1__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG1_REG1__SIZE) - 1U)) << MCU_SYSCTRL_REG1_REG1__SHIFT)

#define MCU_SYSCTRL_REG2_REG2__SIZE                        32U
#define MCU_SYSCTRL_REG2_REG2__SHIFT                       0U
#define MCU_SYSCTRL_REG2_REG2__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG2_REG2__SIZE) - 1U)) << MCU_SYSCTRL_REG2_REG2__SHIFT)

#define MCU_SYSCTRL_REG3_REG3__SIZE                        32U
#define MCU_SYSCTRL_REG3_REG3__SHIFT                       0U
#define MCU_SYSCTRL_REG3_REG3__MASK                        (((uint32_t)((1UL << MCU_SYSCTRL_REG3_REG3__SIZE) - 1U)) << MCU_SYSCTRL_REG3_REG3__SHIFT)

#define MCU_SYSCTRL_COMPONENT_ID0_ID0__SIZE                32U
#define MCU_SYSCTRL_COMPONENT_ID0_ID0__SHIFT               0U
#define MCU_SYSCTRL_COMPONENT_ID0_ID0__MASK                (((uint32_t)((1UL << MCU_SYSCTRL_COMPONENT_ID0_ID0__SIZE) - 1U)) << MCU_SYSCTRL_COMPONENT_ID0_ID0__SHIFT)

#define MCU_SYSCTRL_COMPONENT_ID1_ID1__SIZE                32U
#define MCU_SYSCTRL_COMPONENT_ID1_ID1__SHIFT               0U
#define MCU_SYSCTRL_COMPONENT_ID1_ID1__MASK                (((uint32_t)((1UL << MCU_SYSCTRL_COMPONENT_ID1_ID1__SIZE) - 1U)) << MCU_SYSCTRL_COMPONENT_ID1_ID1__SHIFT)

#define MCU_SYSCTRL_COMPONENT_ID2_ID2__SIZE                32U
#define MCU_SYSCTRL_COMPONENT_ID2_ID2__SHIFT               0U
#define MCU_SYSCTRL_COMPONENT_ID2_ID2__MASK                (((uint32_t)((1UL << MCU_SYSCTRL_COMPONENT_ID2_ID2__SIZE) - 1U)) << MCU_SYSCTRL_COMPONENT_ID2_ID2__SHIFT)

#define MCU_SYSCTRL_COMPONENT_ID3_ID3__SIZE                32U
#define MCU_SYSCTRL_COMPONENT_ID3_ID3__SHIFT               0U
#define MCU_SYSCTRL_COMPONENT_ID3_ID3__MASK                (((uint32_t)((1UL << MCU_SYSCTRL_COMPONENT_ID3_ID3__SIZE) - 1U)) << MCU_SYSCTRL_COMPONENT_ID3_ID3__SHIFT)


//------------------------------------------------------------------------------
//                                  Types
//------------------------------------------------------------------------------

typedef struct
{
    __IOM uint32_t mem_ctrl;
    __IM  uint32_t pmu_ctrl;
    __IOM uint32_t reset_control;
    __IM  uint32_t reserved1[1];
    __IM  uint32_t reset_info;
    __IM  uint32_t reserved2[4079];
    __IM  uint32_t reg4;
    __IM  uint32_t reg5;
    __IM  uint32_t reg6;
    __IM  uint32_t reg7;
    __IM  uint32_t reg0;
    __IM  uint32_t reg1;
    __IM  uint32_t reg2;
    __IM  uint32_t reg3;
    __IM  uint32_t component_id0;
    __IM  uint32_t component_id1;
    __IM  uint32_t component_id2;
    __IM  uint32_t component_id3;
} MCU_SYSCTRL_REGS_T;

#endif /* MCU_SYSCTRL_H */
